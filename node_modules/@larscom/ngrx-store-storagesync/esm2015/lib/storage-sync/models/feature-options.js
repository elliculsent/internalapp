/**
 * @fileoverview added by tsickle
 * Generated from: lib/storage-sync/models/feature-options.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @record
 * @template T
 */
export function IFeatureOptions() { }
if (false) {
    /**
     * The name of the feature state to sync
     * @type {?}
     */
    IFeatureOptions.prototype.stateKey;
    /**
     * Filter out (ignore) properties that exist on the feature state.
     * @type {?|undefined}
     */
    IFeatureOptions.prototype.excludeKeys;
    /**
     * Provide the storage type to sync the feature state to,
     * it can be any storage which implements the 'Storage' interface.
     *
     * It will override the storage property in StorageSyncOptions
     * @see IStorageSyncOptions
     * @type {?|undefined}
     */
    IFeatureOptions.prototype.storageForFeature;
    /**
     * Sync to storage will only occur when this function returns true
     * \@param featureState the next feature state
     * \@param state the next state
     * @type {?|undefined}
     */
    IFeatureOptions.prototype.shouldSync;
    /**
     * Serializer for storage keys (feature state),
     * it will override the storageKeySerializer in StorageSyncOptions
     * @see IStorageSyncOptions
     *
     * \@param key the storage item key
     * @type {?|undefined}
     */
    IFeatureOptions.prototype.storageKeySerializerForFeature;
    /**
     * Serializer for the feature state (before saving to a storage location)
     * \@param featureState the next feature state
     * @type {?|undefined}
     */
    IFeatureOptions.prototype.serialize;
    /**
     * Deserializer for the feature state (after getting the state from a storage location)
     *
     * ISO Date objects which are stored as a string gets revived as Date object by default.
     * \@param featureState the feature state retrieved from a storage location
     * @type {?|undefined}
     */
    IFeatureOptions.prototype.deserialize;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmVhdHVyZS1vcHRpb25zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmdyeC1zdG9yZS1zdG9yYWdlc3luYy9zcmMvbGliL3N0b3JhZ2Utc3luYy9tb2RlbHMvZmVhdHVyZS1vcHRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLHFDQTJDQzs7Ozs7O0lBdkNDLG1DQUFpQjs7Ozs7SUFJakIsc0NBQXVCOzs7Ozs7Ozs7SUFRdkIsNENBQTRCOzs7Ozs7O0lBTTVCLHFDQUE2RDs7Ozs7Ozs7O0lBUTdELHlEQUF5RDs7Ozs7O0lBS3pELG9DQUFpRDs7Ozs7Ozs7SUFPakQsc0NBQW1EIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGludGVyZmFjZSBJRmVhdHVyZU9wdGlvbnM8VD4ge1xuICAvKipcbiAgICogVGhlIG5hbWUgb2YgdGhlIGZlYXR1cmUgc3RhdGUgdG8gc3luY1xuICAgKi9cbiAgc3RhdGVLZXk6IHN0cmluZztcbiAgLyoqXG4gICAqIEZpbHRlciBvdXQgKGlnbm9yZSkgcHJvcGVydGllcyB0aGF0IGV4aXN0IG9uIHRoZSBmZWF0dXJlIHN0YXRlLlxuICAgKi9cbiAgZXhjbHVkZUtleXM/OiBzdHJpbmdbXTtcbiAgLyoqXG4gICAqIFByb3ZpZGUgdGhlIHN0b3JhZ2UgdHlwZSB0byBzeW5jIHRoZSBmZWF0dXJlIHN0YXRlIHRvLFxuICAgKiBpdCBjYW4gYmUgYW55IHN0b3JhZ2Ugd2hpY2ggaW1wbGVtZW50cyB0aGUgJ1N0b3JhZ2UnIGludGVyZmFjZS5cbiAgICpcbiAgICogSXQgd2lsbCBvdmVycmlkZSB0aGUgc3RvcmFnZSBwcm9wZXJ0eSBpbiBTdG9yYWdlU3luY09wdGlvbnNcbiAgICogQHNlZSBJU3RvcmFnZVN5bmNPcHRpb25zXG4gICAqL1xuICBzdG9yYWdlRm9yRmVhdHVyZT86IFN0b3JhZ2U7XG4gIC8qKlxuICAgKiBTeW5jIHRvIHN0b3JhZ2Ugd2lsbCBvbmx5IG9jY3VyIHdoZW4gdGhpcyBmdW5jdGlvbiByZXR1cm5zIHRydWVcbiAgICogQHBhcmFtIGZlYXR1cmVTdGF0ZSB0aGUgbmV4dCBmZWF0dXJlIHN0YXRlXG4gICAqIEBwYXJhbSBzdGF0ZSB0aGUgbmV4dCBzdGF0ZVxuICAgKi9cbiAgc2hvdWxkU3luYz86IChmZWF0dXJlU3RhdGU6IFBhcnRpYWw8VD4sIHN0YXRlOiBUKSA9PiBib29sZWFuO1xuICAvKipcbiAgICogU2VyaWFsaXplciBmb3Igc3RvcmFnZSBrZXlzIChmZWF0dXJlIHN0YXRlKSxcbiAgICogaXQgd2lsbCBvdmVycmlkZSB0aGUgc3RvcmFnZUtleVNlcmlhbGl6ZXIgaW4gU3RvcmFnZVN5bmNPcHRpb25zXG4gICAqIEBzZWUgSVN0b3JhZ2VTeW5jT3B0aW9uc1xuICAgKlxuICAgKiBAcGFyYW0ga2V5IHRoZSBzdG9yYWdlIGl0ZW0ga2V5XG4gICAqL1xuICBzdG9yYWdlS2V5U2VyaWFsaXplckZvckZlYXR1cmU/OiAoa2V5OiBzdHJpbmcpID0+IHN0cmluZztcbiAgLyoqXG4gICAqIFNlcmlhbGl6ZXIgZm9yIHRoZSBmZWF0dXJlIHN0YXRlIChiZWZvcmUgc2F2aW5nIHRvIGEgc3RvcmFnZSBsb2NhdGlvbilcbiAgICogQHBhcmFtIGZlYXR1cmVTdGF0ZSB0aGUgbmV4dCBmZWF0dXJlIHN0YXRlXG4gICAqL1xuICBzZXJpYWxpemU/OiAoZmVhdHVyZVN0YXRlOiBQYXJ0aWFsPFQ+KSA9PiBzdHJpbmc7XG4gIC8qKlxuICAgKiBEZXNlcmlhbGl6ZXIgZm9yIHRoZSBmZWF0dXJlIHN0YXRlIChhZnRlciBnZXR0aW5nIHRoZSBzdGF0ZSBmcm9tIGEgc3RvcmFnZSBsb2NhdGlvbilcbiAgICpcbiAgICogSVNPIERhdGUgb2JqZWN0cyB3aGljaCBhcmUgc3RvcmVkIGFzIGEgc3RyaW5nIGdldHMgcmV2aXZlZCBhcyBEYXRlIG9iamVjdCBieSBkZWZhdWx0LlxuICAgKiBAcGFyYW0gZmVhdHVyZVN0YXRlIHRoZSBmZWF0dXJlIHN0YXRlIHJldHJpZXZlZCBmcm9tIGEgc3RvcmFnZSBsb2NhdGlvblxuICAgKi9cbiAgZGVzZXJpYWxpemU/OiAoZmVhdHVyZVN0YXRlOiBzdHJpbmcpID0+IFBhcnRpYWw8VD47XG59XG4iXX0=