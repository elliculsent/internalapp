{"version":3,"file":"larscom-ngrx-store-storagesync.js","sources":["../../../projects/ngrx-store-storagesync/src/lib/storage-sync/actions.ts","../../../projects/ngrx-store-storagesync/src/lib/storage-sync/rehydrate-state.ts","../../../projects/ngrx-store-storagesync/src/lib/storage-sync/state-sync.ts","../../../projects/ngrx-store-storagesync/src/lib/storage-sync/storage-sync.ts","../../../projects/ngrx-store-storagesync/src/lib/form-sync/form-sync.constants.ts","../../../projects/ngrx-store-storagesync/src/lib/form-sync/providers/form-sync.providers.ts","../../../projects/ngrx-store-storagesync/src/lib/form-sync/store/form.actions.ts","../../../projects/ngrx-store-storagesync/src/lib/form-sync/store/form.selectors.ts","../../../projects/ngrx-store-storagesync/src/lib/form-sync/directives/form-group.directive.ts","../../../projects/ngrx-store-storagesync/src/lib/form-sync/store/form.reducer.ts","../../../projects/ngrx-store-storagesync/src/lib/form-sync/form-sync.module.ts"],"sourcesContent":["export const INIT_ACTION = '@ngrx/store/init';\nexport const INIT_ACTION_EFFECTS = '@ngrx/effects/init';\nexport const UPDATE_ACTION = '@ngrx/store/update-reducers';\n","import { IStorageSyncOptions } from './models/storage-sync-options';\n\nconst dateMatcher = /(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})/;\n\n/**\n * @internal Restores the resolved state from a storage location\n * @param options the configurable options\n * @returns the restored state from the provided storage\n */\nexport const rehydrateState = <T>({\n  storage,\n  storageKeySerializer,\n  features,\n  storageError,\n  version: currentVersion\n}: IStorageSyncOptions<T>): T => {\n  if (currentVersion) {\n    try {\n      const key = storageKeySerializer('version');\n      const version = +storage.getItem(key);\n      if (version < currentVersion) {\n        return null;\n      }\n    } catch (e) {\n      if (storageError) {\n        storageError(e);\n      } else {\n        throw e;\n      }\n    }\n  }\n  const state = features.reduce<T>((acc, curr) => {\n    const { storageKeySerializerForFeature, stateKey, deserialize, storageForFeature } = curr;\n\n    const key = storageKeySerializerForFeature\n      ? storageKeySerializerForFeature(stateKey)\n      : storageKeySerializer(stateKey);\n\n    try {\n      const featureState = storageForFeature ? storageForFeature.getItem(key) : storage.getItem(key);\n      return featureState\n        ? {\n            ...acc,\n            ...{\n              [stateKey]: deserialize\n                ? deserialize(featureState)\n                : JSON.parse(featureState, (_: string, value: string) =>\n                    dateMatcher.test(String(value)) ? new Date(value) : value\n                  )\n            }\n          }\n        : acc;\n    } catch (e) {\n      if (storageError) {\n        storageError(e);\n      } else {\n        throw e;\n      }\n    }\n  }, {} as T);\n  return Object.keys(state).length ? state : null;\n};\n","import { cloneDeep, isPlainObject } from 'lodash-es';\nimport { IStorageSyncOptions } from './models/storage-sync-options';\n\n\n/**\n * @internal Blacklisting\n * @returns the filtered state\n */\nexport const excludeKeysFromState = <T>(state: Partial<T>, excludeKeys?: string[]): Partial<T> => {\n  if (!excludeKeys) {\n    return state;\n  }\n\n  const keyPairs = excludeKeys.map(key => ({\n    rootKey: key.split('.')[0],\n    nestedKey: key.split('.')[1]\n  }));\n\n  for (const key in state) {\n    if (state.hasOwnProperty(key)) {\n      const keyPair = keyPairs.find(pair => pair.rootKey === key);\n      const rootKey = keyPair ? keyPair.rootKey : null;\n      const nestedKey = keyPair ? keyPair.nestedKey : null;\n\n      switch (typeof state[key]) {\n        case 'object': {\n          if (rootKey && !state[key]) {\n            delete state[key];\n          } else if (rootKey && nestedKey) {\n            excludeKeysFromState<T>(state[key], [...excludeKeys, nestedKey]);\n          } else if (rootKey) {\n            delete state[key];\n          } else {\n            excludeKeysFromState<T>(state[key], excludeKeys);\n          }\n          break;\n        }\n        default: {\n          if (rootKey) {\n            delete state[key];\n          }\n        }\n      }\n    }\n  }\n  return state;\n};\n\n/**\n * @internal Remove empty objects from state\n * @returns the cleaned state\n */\nexport const cleanState = <T>(state: Partial<T>): Partial<T> => {\n  for (const key in state) {\n    if (!isPlainObject(state[key])) {\n      continue;\n    }\n\n    cleanState<T>(state[key]);\n\n    if (!Object.keys(state[key]).length) {\n      delete state[key];\n    }\n  }\n  return state;\n};\n\n/**\n * @internal Sync state with storage\n * @param state the next state\n * @param options the configurable options\n * @returns the next state\n */\nexport const stateSync = <T>(\n  state: T,\n  { features, storage, storageKeySerializer, storageError, version: currentVersion }: IStorageSyncOptions<T>\n): T => {\n  if (currentVersion) {\n    try {\n      const key = storageKeySerializer('version');\n      storage.setItem(key, String(currentVersion));\n    } catch (e) {\n      if (storageError) {\n        storageError(e);\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  features\n    .filter(({ stateKey }) => state[stateKey] !== undefined)\n    .filter(({ stateKey, shouldSync }) => (shouldSync ? shouldSync(state[stateKey], state) : true))\n    .forEach(({ stateKey, excludeKeys, storageKeySerializerForFeature, serialize, storageForFeature }) => {\n      const featureState = cloneDeep<Partial<T>>(state[stateKey]);\n      const filteredState = cleanState<T>(excludeKeysFromState<T>(featureState, excludeKeys));\n\n      if (isPlainObject(filteredState) && !Object.keys(filteredState).length) {\n        return;\n      }\n\n      const key = storageKeySerializerForFeature\n        ? storageKeySerializerForFeature(stateKey)\n        : storageKeySerializer(stateKey);\n\n      const value = serialize ? serialize(filteredState) : JSON.stringify(filteredState);\n\n      try {\n        if (storageForFeature) {\n          storageForFeature.setItem(key, value);\n        } else {\n          storage.setItem(key, value);\n        }\n      } catch (e) {\n        if (storageError) {\n          storageError(e);\n        } else {\n          throw e;\n        }\n      }\n    });\n\n  return state;\n};\n","import { Action } from '@ngrx/store';\nimport { merge } from 'lodash-es';\nimport { INIT_ACTION, INIT_ACTION_EFFECTS, UPDATE_ACTION } from './actions';\nimport { IStorageSyncOptions } from './models/storage-sync-options';\nimport { rehydrateState } from './rehydrate-state';\nimport { stateSync } from './state-sync';\n\n/**\n * The StorageSync Meta Reducer for @ngrx/store.\n *\n * @param options The configuration for the meta reducer\n *\n * Check out github for more information.\n * @see https://github.com/larscom/ngrx-store-storagesync\n *\n * @returns the meta reducer function\n */\nexport const storageSync = <T>(options: IStorageSyncOptions<T>) => (\n  reducer: (state: T, action: Action) => T\n): ((state: T, action: Action) => T) => {\n  const config: IStorageSyncOptions<T> = {\n    rehydrate: true,\n    storageKeySerializer: (key: string) => key,\n    rehydrateStateMerger: (nextState, rehydratedState) => merge({}, nextState, rehydratedState),\n    ...options\n  };\n\n  const { rehydrate, rehydrateStateMerger } = config;\n  const revivedState = rehydrate ? rehydrateState<T>(config) : null;\n\n  return (state: T, action: Action): T => {\n    const nextState = action.type === INIT_ACTION ? reducer(state, action) : { ...state };\n    const shouldMerge = revivedState && [INIT_ACTION, UPDATE_ACTION].includes(action.type);\n    const mergedState = reducer(shouldMerge ? rehydrateStateMerger(nextState, revivedState) : nextState, action);\n\n    return [INIT_ACTION, INIT_ACTION_EFFECTS].includes(action.type) ? mergedState : stateSync(mergedState, config);\n  };\n};\n","export const FORM_SYNC_STORE_KEY = 'formSync';\n","import { InjectionToken } from '@angular/core';\nimport { ActionReducer } from '@ngrx/store';\nimport { IFormSyncConfig } from '../models/form-sync-config';\nimport { IFormSyncState } from '../store/form.reducer';\n\nexport const FORM_SYNC_CONFIG = new InjectionToken<IFormSyncConfig>('FORM_SYNC_CONFIG', {\n  factory: () => ({ syncOnSubmit: false, syncRawValue: false, syncValidOnly: false })\n});\n\nexport const FORM_SYNC_REDUCER = new InjectionToken<ActionReducer<IFormSyncState>>('FORM_SYNC_REDUCER');\n","import { createAction, props } from '@ngrx/store';\n\nexport const setForm = createAction('@larscom/form-sync/set', props<{ id: string; value: any }>());\nexport const patchForm = createAction('@larscom/form-sync/patch', props<{ id: string; value: any }>());\nexport const resetForm = createAction('@larscom/form-sync/reset', props<{ id: string }>());\nexport const deleteForm = createAction('@larscom/form-sync/delete', props<{ id: string }>());\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { FORM_SYNC_STORE_KEY } from '../form-sync.constants';\nimport { IFormSyncState } from './form.reducer';\n\nexport const getFormSyncState = createFeatureSelector<IFormSyncState>(FORM_SYNC_STORE_KEY);\nexport const getFormSyncValue = createSelector(\n  getFormSyncState,\n  (state: IFormSyncState, { id }: { id: string }) => state[id]\n);\n","import { Directive, HostListener, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { select, Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { IFormSyncConfig } from '../models/form-sync-config';\nimport { FORM_SYNC_CONFIG } from '../providers/form-sync.providers';\nimport { patchForm } from '../store/form.actions';\nimport { getFormSyncValue } from '../store/form.selectors';\n\n@Directive({\n  selector: '[formGroup]'\n})\nexport class FormGroupDirective implements OnInit, OnDestroy {\n  @Input() formGroup: FormGroup;\n  @Input() formGroupId: string;\n  @Input() formGroupSync = true;\n\n  constructor(@Inject(FORM_SYNC_CONFIG) private readonly config: IFormSyncConfig, private readonly store: Store<any>) {}\n\n  private readonly subscriptions = new Subscription();\n\n  ngOnInit(): void {\n    if (!this.formGroupId) {\n      return;\n    }\n\n    const { syncOnSubmit, syncValidOnly, syncRawValue } = this.config;\n    this.subscriptions.add(\n      this.formGroup.valueChanges\n        .pipe(\n          filter(() => this.formGroupSync),\n          filter(() => !(syncValidOnly && !this.formGroup.valid)),\n          filter(() => !syncOnSubmit)\n        )\n        .subscribe(() => this.dispatch(syncRawValue))\n    );\n\n    this.subscriptions.add(\n      this.store\n        .pipe(\n          filter(() => this.formGroupSync),\n          select(getFormSyncValue, { id: this.formGroupId }),\n          filter(value => value != null)\n        )\n        .subscribe(value => this.formGroup.patchValue(value, { emitEvent: false }))\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  @HostListener('submit')\n  onSubmit(): void {\n    if (!this.formGroupId || !this.formGroupSync) {\n      return;\n    }\n\n    const { syncOnSubmit, syncValidOnly, syncRawValue } = this.config;\n\n    if (!syncOnSubmit) {\n      return;\n    }\n\n    if (syncValidOnly && !this.formGroup.valid) {\n      return;\n    }\n\n    this.dispatch(syncRawValue);\n  }\n\n  private dispatch(syncRawValue: boolean): void {\n    const value = syncRawValue ? this.formGroup.getRawValue() : this.formGroup.value;\n    this.store.dispatch(patchForm({ id: this.formGroupId, value }));\n  }\n}\n","import { createReducer, on } from '@ngrx/store';\nimport { cloneDeep, isArray, isPlainObject, merge } from 'lodash-es';\n\nimport { deleteForm, patchForm, resetForm, setForm } from './form.actions';\n\nexport interface IFormSyncState {\n  [formGroupId: string]: any;\n}\n\n/**\n * The form sync reducer for @ngrx/store.\n */\n// tslint:disable: no-shadowed-variable\nexport const formSyncReducer = createReducer(\n  Object(),\n  on(setForm, (state, { id, value }) => ({ ...state, [id]: value })),\n  on(patchForm, (state, { id, value }) => merge({}, { ...state }, { [id]: value })),\n  on(resetForm, (state, { id }) => {\n    const reset = (slice: Partial<IFormSyncState>) => {\n      for (const property in slice) {\n        if (!slice.hasOwnProperty(property)) {\n          continue;\n        }\n\n        if (isPlainObject(slice[property])) {\n          reset(slice[property]);\n        } else if (isArray(slice[property])) {\n          Array(slice[property]).forEach(p => reset(p));\n        } else {\n          slice[property] = null;\n        }\n      }\n      return slice;\n    };\n\n    const value = reset(cloneDeep(state[id]));\n\n    return { ...state, [id]: value };\n  }),\n  on(deleteForm, (state, { id }) => ({ ...state, [id]: undefined }))\n);\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { FormGroupDirective } from './directives/form-group.directive';\nimport { FORM_SYNC_STORE_KEY } from './form-sync.constants';\nimport { FORM_SYNC_REDUCER } from './providers/form-sync.providers';\nimport { formSyncReducer } from './store/form.reducer';\n\n@NgModule({\n  declarations: [FormGroupDirective],\n  imports: [StoreModule.forFeature(FORM_SYNC_STORE_KEY, FORM_SYNC_REDUCER)],\n  exports: [FormGroupDirective]\n})\nexport class FormSyncModule {\n  /**\n   * Import 'FormSyncModule.forRoot()' only once.\n   * Use 'FormSyncModule' for additional imports\n   * inside feature modules.\n   */\n  static forRoot(): ModuleWithProviders<FormSyncModule> {\n    return {\n      ngModule: FormSyncModule,\n      providers: [\n        {\n          provide: FORM_SYNC_REDUCER,\n          useValue: formSyncReducer\n        }\n      ]\n    };\n  }\n}\n"],"names":[],"mappings":"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"}