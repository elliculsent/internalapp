{"version":3,"file":"angular-mydatepicker.input.d.ts","sources":["angular-mydatepicker.input.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, ViewContainerRef, Renderer2, ChangeDetectorRef, ComponentFactoryResolver, EventEmitter, SimpleChanges, OnChanges, OnDestroy } from \"@angular/core\";\nimport { AbstractControl, ControlValueAccessor, Validator } from \"@angular/forms\";\nimport { IMyOptions } from \"./interfaces/my-options.interface\";\nimport { IMyDateModel } from \"./interfaces/my-date-model.interface\";\nimport { IMyRangeDateSelection } from \"./interfaces/my-range-date-selection.interface\";\nimport { IMyCalendarViewChanged } from \"./interfaces/my-calendar-view-changed.interface\";\nimport { IMyInputFieldChanged } from \"./interfaces/my-input-field-changed.interface\";\nimport { IMyDefaultMonth } from \"./interfaces/my-default-month.interface\";\nimport { LocaleService } from \"./services/angular-mydatepicker.locale.service\";\nimport { UtilService } from \"./services/angular-mydatepicker.util.service\";\nimport { DefaultConfigService } from \"./services/angular-mydatepicker.config.service\";\nimport { HeaderAction } from \"./enums/header-action.enum\";\nimport { ActiveView } from \"./enums/active-view.enum\";\nexport declare class AngularMyDatePickerDirective implements OnChanges, OnDestroy, ControlValueAccessor, Validator {\n    private localeService;\n    private utilService;\n    private vcRef;\n    private cfr;\n    private renderer;\n    private cdr;\n    private elem;\n    private config;\n    options: IMyOptions;\n    locale: string;\n    defaultMonth: IMyDefaultMonth;\n    dateChanged: EventEmitter<IMyDateModel>;\n    inputFieldChanged: EventEmitter<IMyInputFieldChanged>;\n    calendarViewChanged: EventEmitter<IMyCalendarViewChanged>;\n    calendarToggle: EventEmitter<number>;\n    rangeDateSelection: EventEmitter<IMyRangeDateSelection>;\n    viewActivated: EventEmitter<ActiveView>;\n    private cRef;\n    private hostText;\n    private preventClose;\n    private disabled;\n    private selectedValue;\n    private opts;\n    onChangeCb: (_: any) => void;\n    onTouchedCb: () => void;\n    constructor(localeService: LocaleService, utilService: UtilService, vcRef: ViewContainerRef, cfr: ComponentFactoryResolver, renderer: Renderer2, cdr: ChangeDetectorRef, elem: ElementRef, config: DefaultConfigService);\n    onKeyUp(event: any): void;\n    onBlur(): void;\n    private onClickWrapper;\n    private onClick;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    setLocaleOptions(): void;\n    parseOptions(opts: IMyOptions): void;\n    writeValue(value: any): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    setDisabledState(isDisabled: boolean): void;\n    validate(c: AbstractControl): {\n        [p: string]: any;\n    };\n    openCalendar(): void;\n    closeCalendar(): void;\n    toggleCalendar(): boolean | null;\n    clearDate(): void;\n    isDateValid(): boolean;\n    headerAction(headerAction: HeaderAction): void;\n    setHostValue(value: string): void;\n    private ignoreKeyPress;\n    private onAnimateWrapper;\n    private animationEnd;\n    private closeSelector;\n    private removeComponent;\n    private updateModel;\n    private getHostValue;\n    private focusToInput;\n    private emitDateChanged;\n    private setSelectedValue;\n    private emitInputFieldChanged;\n    private emitCalendarChanged;\n    private emitRangeDateSelection;\n    private emitViewActivated;\n    private emitCalendarToggle;\n    private appendSelector;\n    private getSelectorPosition;\n    private getSelectorDimension;\n}\n"]}